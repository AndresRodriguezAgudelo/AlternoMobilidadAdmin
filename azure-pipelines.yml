trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'Azure_superApp'
  appName: 'EquirentAppAdminFrontend-DEV'
  azureResourceGroup: 'RG_EquisoftFleet_Dev_QA'
  nodeVersion: '22.12.0'
  artifactName: 'app'

stages:
- stage: Build
  displayName: 'Construir la aplicación'
  jobs:
  - job: Build
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(nodeVersion)'
        displayName: 'Instalar Node.js $(nodeVersion)'

      - script: |
          npm install -g npm@10.9.0
        displayName: 'Instalar npm 10.9.0'

      - script: |
          npm install
          npm run build
        displayName: 'Instalar dependencias y compilar'

      # Modificación: Copiar el contenido de "dist" en lugar de la carpeta completa
      - script: |
          mkdir artifact
          cp -R dist/* artifact/ || echo "No se encontró la carpeta dist"
          cp package.json artifact/
          cp package-lock.json artifact/ || echo "No se encontró package-lock.json"
        displayName: 'Preparar artifact (sin node_modules)'

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'artifact'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
        displayName: 'Empaquetar archivos en ZIP'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
          artifact: '$(artifactName)'
        displayName: 'Publicar artifact'

- stage: Deploy
  displayName: 'Desplegar en Azure'
  dependsOn: Build
  jobs:
  - job: Deploy
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: '$(artifactName)'
          path: '$(Pipeline.Workspace)/$(artifactName)'
        displayName: 'Descargar artifact'

      - script: |
          echo "Contenido del artifact:"
          unzip -l "$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip"
        displayName: 'Verificar contenido del artifact'

      - task: AzureWebApp@1
        inputs:
          azureSubscription: '$(azureSubscription)'
          appName: '$(appName)'
          package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'
        displayName: 'Desplegar aplicación'

